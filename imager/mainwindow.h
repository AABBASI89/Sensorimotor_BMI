/*************************************************************
/IMAGER_v2.0 (2016)
/mainwindow.h
/Decleration of function used in mainwindow.cpp
/Automatically generated by Qt
/Author: Aamir Abbasi
**************************************************************/

#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QFileDialog>
#include <QString>
#include <QStringList>
#include <QMessageBox>
#include <QDebug>
#include <QObject>
#include <QProgressBar>
#include <qglobal.h>
#include "imagegrab.h"
#include "fileio.h"
#include "nsp.h"
#include "livethread.h"
#include <pylon/PylonIncludes.h>
#include <pylon/usb/BaslerUsbInstantCamera.h>
#ifdef PYLON_WIN_BUILD
#    include <pylon/PylonGUI.h>
#endif

// Namespace for using pylon objects.
using namespace Pylon;
using namespace GenApi;

// Namespace for using cout (C++ objects).
using namespace std;

// These global variables are defined in the main.cpp file.
extern int activeFlag;
extern QString exposure;
extern QString xBin;
extern QString yBin;

namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = 0);
    ~MainWindow();

    QString comments;

private:
    QStringList pathList;

    //Trial counters initialisation for each whisker
    int counter_Alpha = 0;
    int counter_A1 = 0;
    int counter_A2 = 0;
    int counter_A3 = 0;
    int counter_A4 = 0;
    int counter_Beta = 0;
    int counter_B1 = 0;
    int counter_B2 = 0;
    int counter_B3 = 0;
    int counter_B4 = 0;
    int counter_Gamma = 0;
    int counter_C1 = 0;
    int counter_C2 = 0;
    int counter_C3 = 0;
    int counter_C4 = 0;
    int counter_Delta = 0;
    int counter_D1 = 0;
    int counter_D2 = 0;
    int counter_D3 = 0;
    int counter_D4 = 0;
    int counter_E1 = 0;
    int counter_E2 = 0;
    int counter_E3 = 0;
    int counter_E4 = 0;

    //Session counters initialisation for each whisker
    int session_Alpha = 0;
    int session_A1 = 0;
    int session_A2 = 0;
    int session_A3 = 0;
    int session_A4 = 0;
    int session_Beta = 0;
    int session_B1 = 0;
    int session_B2 = 0;
    int session_B3 = 0;
    int session_B4 = 0;
    int session_Gamma = 0;
    int session_C1 = 0;
    int session_C2 = 0;
    int session_C3 = 0;
    int session_C4 = 0;
    int session_Delta = 0;
    int session_D1 = 0;
    int session_D2 = 0;
    int session_D3 = 0;
    int session_D4 = 0;
    int session_E1 = 0;
    int session_E2 = 0;
    int session_E3 = 0;
    int session_E4 = 0;

    //Wave flags
    bool sqWave_flag;
    bool sineWave_flag;


private slots:

    void on_Load_Configuration_triggered();

    void on_Grab_Single_clicked();

    void on_Grab_Sequence_clicked();

    void on_Stop_Trials_clicked();

    void on_Calibrate_camera_clicked();

    void on_Start_Live_clicked();

    void on_Stop_Live_clicked();

    void on_test_piezo_clicked();

    void on_pushButton_savePath_clicked();

    void on_Test_LED_clicked();

    void on_Test_LED_toggled(bool checked);

    void on_checkBox_square_toggled(bool checked);

    void on_checkBox_sine_toggled(bool checked);

private:
    Ui::MainWindow *ui;
    QThread *thread;
    LiveThread *worker;
};

#endif // MAINWINDOW_H
